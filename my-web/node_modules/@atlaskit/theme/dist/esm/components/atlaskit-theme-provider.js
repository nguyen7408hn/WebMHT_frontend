import React, { memo } from 'react';
import { N0 } from '../colors';
import { DEFAULT_THEME_MODE } from '../constants';
// For forward-compat until everything is upgraded.
import useThemeResetStyles, { SELECTOR } from './hooks/use-theme-reset-styles';
import Theme from './theme';
var themeFnMap = {
  dark: function dark() {
    return {
      mode: 'dark'
    };
  },
  light: function light() {
    return {
      mode: 'light'
    };
  }
};

/**
 *
 * @deprecated {@link https://hello.atlassian.net/browse/ENGHEALTH-4693 Internal documentation for deprecation (no external access)}
 *
 * __Atlaskit Theme Provider__
 *
 * The global theme provider is used to provide theme context to an application.
 * It should be used once in application code at the root, or as near to the root as possible,
 * to inject the global theme via React context.
 *
 * - [Examples](https://atlaskit.atlassian.com/examples/design-system/theme)
 *
 * @example
 * ```jsx
 * import { AtlaskitThemeProvider } from '@atlaskit/theme/components';
 *
 * const App = () => (
 *  <AtlaskitThemeProvider mode="dark">
 *   <App />
 *  </AtlaskitThemeProvider>
 * );
 * ```
 */
var AtlaskitThemeProvider = /*#__PURE__*/memo(function (_ref) {
  var _ref$mode = _ref.mode,
    mode = _ref$mode === void 0 ? DEFAULT_THEME_MODE : _ref$mode,
    background = _ref.background,
    children = _ref.children;
  // background color is extracted here is it conditionally applied on the <body>
  var themeObj = {
    theme: {
      mode: mode
    }
  };
  var backgroundColor = background ? background(themeObj) : "var(--ds-surface, ".concat(N0, ")");
  useThemeResetStyles(backgroundColor);
  return /*#__PURE__*/React.createElement(Theme.Provider, {
    value: themeFnMap[mode]
  }, /*#__PURE__*/React.createElement("div", {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop
    className: "".concat(mode, "-").concat(SELECTOR)
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop
    ,
    style: {
      backgroundColor: backgroundColor
    },
    "data-testid": "theme-provider"
  }, children));
});
export default AtlaskitThemeProvider;